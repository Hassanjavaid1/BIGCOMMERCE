{"version":3,"file":"static/js/468.390841be.chunk.js","mappings":"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","sources":["Components/Skeleton/DetailSkeleton.js","Components/JavaScript/ProductDetail.js","../node_modules/react-loading-skeleton/dist/index.js"],"sourcesContent":["import React from \"react\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport \"../CSS/ProductSkeleton.css\";\r\nfunction Detail_Skeleton() {\r\n  return (\r\n    <>\r\n      <div className=\"detail_skeleton\">\r\n        <div className=\"sub_detail_skeleton\">\r\n          <Skeleton className=\"detail_skeleton_img\" />\r\n        </div>\r\n        <div className=\"detail_desc_skeleton\">\r\n          <Skeleton className=\"detail_skeleton_category\" />\r\n          <Skeleton count={2} className=\"detail_title_price_skeleton\" />\r\n          <Skeleton count={5} className=\"detail_desc_skeleton\" />\r\n\r\n          <Skeleton circle className=\"detail_button_skeleton\" />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Detail_Skeleton;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { FaStar } from \"react-icons/fa\";\r\nimport { MyContext } from \"./ContextHook\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport DetailSkeleton from \"../Skeleton/DetailSkeleton\";\r\nimport placeholder from \"../Images/placeholder.jpg\";\r\nimport AddToCart from \"./AddToCart\";\r\n\r\nfunction ProductDetail() {\r\n  const { productData, totalCartItem, setTotalCartItem } =\r\n    useContext(MyContext);\r\n  const [productDetail, setproductDetail] = useState([]);\r\n  const [detailLoading, setDetailLoading] = useState(true);\r\n  const { id } = useParams();\r\n  console.log(id);\r\n  console.log(productDetail);\r\n  const fetchProudctDetail = async () => {\r\n    // const url = await fetch(`https://fakestoreapi.com/products/${id}`);\r\n    // const data = await url.json();\r\n    // console.log(data);\r\n    // setproductDetail(data);\r\n    // setloading(false);\r\n  };\r\n  useEffect(() => {\r\n    fetchProudctDetail();\r\n    console.log(productDetail);\r\n    setTimeout(() => {\r\n      setDetailLoading(false);\r\n    }, 900);\r\n  }, []);\r\n\r\n  const handleCartData = () => {\r\n    let newData = JSON.parse(localStorage.getItem(\"cartData\")) || [];\r\n    console.log(newData);\r\n    //Check Duplicate Value\r\n\r\n    let isValueExist = newData.filter(\r\n      (items) => items.id == productData.homeData[0].id\r\n    );\r\n    if (isValueExist.length > 0) {\r\n      toast(\"Product already exist in your cart.\");\r\n    } else {\r\n      newData.push(productData.homeData[0]);\r\n      localStorage.setItem(\"cartData\", JSON.stringify(newData));\r\n      setTotalCartItem(newData.length);\r\n      console.log(newData);\r\n    }\r\n  };\r\n  const notify = () => toast(\"Product had been added to cart!\");\r\n\r\n  return (\r\n    <>\r\n      <div className=\"bg-[#b7b7e3]\">\r\n        <div className=\"container mx-auto p-8 lg:py-20\">\r\n          {detailLoading ? (\r\n            <DetailSkeleton />\r\n          ) : (\r\n            <div className=\"flex items-center justify-center gap-8\">\r\n              <img\r\n                src={placeholder || productData.homeData[0].image}\r\n                className=\"w-full object-cover lg:w-2/6 lg:h-[35rem]\"\r\n                alt=\"\"\r\n              />\r\n              <div className=\"flex flex-col items-baseline gap-4 lg:w-2/5\">\r\n                <h4 className=\"font-semibold text-lg uppercase\">\r\n                  {productData.homeData[0].category}\r\n                </h4>\r\n                <h2 className=\"text-2xl font-normal\">\r\n                  {productData.homeData[0].title}\r\n                </h2>\r\n                <div className=\"flex items-center gap-6 text-2xl\">\r\n                  <h2>${productData.homeData[0].price}</h2>\r\n                  <div className=\"flex items-center gap-1 font-semibold\">\r\n                    4.1\r\n                    <FaStar className=\"text-yellow-500\" />\r\n                  </div>\r\n                </div>\r\n                <p>{productData.homeData[0].description}</p>\r\n                <div>\r\n                  <button\r\n                    onClick={handleCartData}\r\n                    className=\"bg-blue-500 text-white font-semibold px-5 py-2 text-lg focus:border-0\"\r\n                  >\r\n                    Add to Cart\r\n                  </button>\r\n                  <ToastContainer />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProductDetail;\r\n","'use client';\nimport React from 'react';\n\n/**\n * @internal\n */\nconst SkeletonThemeContext = React.createContext({});\n\n/* eslint-disable react/no-array-index-key */\nconst defaultEnableAnimation = true;\n// For performance & cleanliness, don't add any inline styles unless we have to\nfunction styleOptionsToCssProperties({ baseColor, highlightColor, width, height, borderRadius, circle, direction, duration, enableAnimation = defaultEnableAnimation, }) {\n    const style = {};\n    if (direction === 'rtl')\n        style['--animation-direction'] = 'reverse';\n    if (typeof duration === 'number')\n        style['--animation-duration'] = `${duration}s`;\n    if (!enableAnimation)\n        style['--pseudo-element-display'] = 'none';\n    if (typeof width === 'string' || typeof width === 'number')\n        style.width = width;\n    if (typeof height === 'string' || typeof height === 'number')\n        style.height = height;\n    if (typeof borderRadius === 'string' || typeof borderRadius === 'number')\n        style.borderRadius = borderRadius;\n    if (circle)\n        style.borderRadius = '50%';\n    if (typeof baseColor !== 'undefined')\n        style['--base-color'] = baseColor;\n    if (typeof highlightColor !== 'undefined')\n        style['--highlight-color'] = highlightColor;\n    return style;\n}\nfunction Skeleton({ count = 1, wrapper: Wrapper, className: customClassName, containerClassName, containerTestId, circle = false, style: styleProp, ...originalPropsStyleOptions }) {\n    var _a, _b, _c;\n    const contextStyleOptions = React.useContext(SkeletonThemeContext);\n    const propsStyleOptions = { ...originalPropsStyleOptions };\n    // DO NOT overwrite style options from the context if `propsStyleOptions`\n    // has properties explicity set to undefined\n    for (const [key, value] of Object.entries(originalPropsStyleOptions)) {\n        if (typeof value === 'undefined') {\n            delete propsStyleOptions[key];\n        }\n    }\n    // Props take priority over context\n    const styleOptions = {\n        ...contextStyleOptions,\n        ...propsStyleOptions,\n        circle,\n    };\n    // `styleProp` has the least priority out of everything\n    const style = {\n        ...styleProp,\n        ...styleOptionsToCssProperties(styleOptions),\n    };\n    let className = 'react-loading-skeleton';\n    if (customClassName)\n        className += ` ${customClassName}`;\n    const inline = (_a = styleOptions.inline) !== null && _a !== void 0 ? _a : false;\n    const elements = [];\n    const countCeil = Math.ceil(count);\n    for (let i = 0; i < countCeil; i++) {\n        let thisStyle = style;\n        if (countCeil > count && i === countCeil - 1) {\n            // count is not an integer and we've reached the last iteration of\n            // the loop, so add a \"fractional\" skeleton.\n            //\n            // For example, if count is 3.5, we've already added 3 full\n            // skeletons, so now we add one more skeleton that is 0.5 times the\n            // original width.\n            const width = (_b = thisStyle.width) !== null && _b !== void 0 ? _b : '100%'; // 100% is the default since that's what's in the CSS\n            const fractionalPart = count % 1;\n            const fractionalWidth = typeof width === 'number'\n                ? width * fractionalPart\n                : `calc(${width} * ${fractionalPart})`;\n            thisStyle = { ...thisStyle, width: fractionalWidth };\n        }\n        const skeletonSpan = (React.createElement(\"span\", { className: className, style: thisStyle, key: i }, \"\\u200C\"));\n        if (inline) {\n            elements.push(skeletonSpan);\n        }\n        else {\n            // Without the <br />, the skeleton lines will all run together if\n            // `width` is specified\n            elements.push(React.createElement(React.Fragment, { key: i },\n                skeletonSpan,\n                React.createElement(\"br\", null)));\n        }\n    }\n    return (React.createElement(\"span\", { className: containerClassName, \"data-testid\": containerTestId, \"aria-live\": \"polite\", \"aria-busy\": (_c = styleOptions.enableAnimation) !== null && _c !== void 0 ? _c : defaultEnableAnimation }, Wrapper\n        ? elements.map((el, i) => React.createElement(Wrapper, { key: i }, el))\n        : elements));\n}\n\nfunction SkeletonTheme({ children, ...styleOptions }) {\n    return (React.createElement(SkeletonThemeContext.Provider, { value: styleOptions }, children));\n}\n\nexport { SkeletonTheme, Skeleton as default };\n"],"names":["_jsx","_Fragment","children","_jsxs","className","Skeleton","count","circle","productData","totalCartItem","setTotalCartItem","useContext","MyContext","productDetail","setproductDetail","useState","detailLoading","setDetailLoading","id","useParams","console","log","useEffect","async","fetchProudctDetail","setTimeout","DetailSkeleton","src","placeholder","homeData","image","alt","category","title","price","FaStar","description","onClick","handleCartData","newData","JSON","parse","localStorage","getItem","filter","items","length","toast","push","setItem","stringify","ToastContainer","SkeletonThemeContext","React","defaultEnableAnimation","styleOptionsToCssProperties","_ref","baseColor","highlightColor","width","height","borderRadius","direction","duration","enableAnimation","style","concat","_ref2","wrapper","Wrapper","customClassName","containerClassName","containerTestId","styleProp","originalPropsStyleOptions","_a","_b","_c","contextStyleOptions","propsStyleOptions","key","value","Object","entries","styleOptions","inline","elements","countCeil","Math","ceil","i","thisStyle","fractionalPart","fractionalWidth","skeletonSpan","map","el"],"sourceRoot":""}