{"version":3,"file":"static/js/991.262f890e.chunk.js","mappings":"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","sources":["Components/JavaScript/ProductCategories.js","Components/Skeleton/ProductSkeleton.js","../node_modules/react-loading-skeleton/dist/index.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { MyContext } from \"./ContextHook\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport ProductSkeleton from \"../Skeleton/ProductSkeleton\";\r\nimport \"../CSS/ProductSkeleton.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport placeholder from \"../Images/placeholder.jpg\";\r\nfunction ProductCategories() {\r\n  const {\r\n    productData,\r\n    loading,\r\n    setLoading,\r\n  } = useContext(MyContext);\r\n\r\n  const [categoryType, setCategoryType] = useState([]);\r\n\r\n  function handleProductCategory(category) {\r\n    setLoading(true);\r\n    if (category == \"all\") {\r\n      setCategoryType(productData);\r\n    } else {\r\n      setCategoryType(\r\n        productData.filter((items) => items.category == category)\r\n      );\r\n    }\r\n\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 900);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setCategoryType(productData);\r\n    setLoading(true);\r\n\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 900);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-8\">\r\n      <h2 className=\"text-center text-3xl\">Category Wise Products</h2>\r\n      <ul className=\"flex items-center justify-center my-8 border-2 w-fit mx-auto\">\r\n        <NavLink\r\n          to={\"/BIGCOMMERCE/All\"}\r\n          className=\"text-[1.4rem]  px-3 py-[.4rem] transition cursor-pointer\"\r\n          onClick={() => handleProductCategory(\"all\")}\r\n        >\r\n          {\" \"}\r\n          All Products\r\n        </NavLink>\r\n        <NavLink\r\n          to={\"/BIGCOMMERCE/Men-Cloths\"}\r\n          className=\"text-[1.4rem]  px-3 py-[.4rem] transition cursor-pointer\"\r\n          onClick={() => handleProductCategory(\"men's clothing\")}\r\n        >\r\n          Men's Clothing\r\n        </NavLink>\r\n        <NavLink\r\n          to={\"/BIGCOMMERCE/Women-Cloths\"}\r\n          className=\"text-[1.4rem] px-3 py-[.4rem] transition cursor-pointer\"\r\n          onClick={() => handleProductCategory(\"women's clothing\")}\r\n        >\r\n          Women's Clothing\r\n        </NavLink>\r\n        <NavLink\r\n          to={\"/BIGCOMMERCE/Jewelry\"}\r\n          className=\"text-[1.4rem]  px-3 py-[.4rem] transition cursor-pointer\"\r\n          onClick={() => handleProductCategory(\"jewelery\")}\r\n        >\r\n          Jewelry\r\n        </NavLink>\r\n        <NavLink\r\n          to={\"/BIGCOMMERCE/Electronics\"}\r\n          className=\"text-[1.4rem]  px-3 py-[.4rem] transition cursor-pointer\"\r\n          onClick={() => handleProductCategory(\"electronics\")}\r\n        >\r\n          Electronics\r\n        </NavLink>\r\n      </ul>\r\n\r\n      <div className=\"flex flex-wrap justify-center items-center gap-6 py-8\">\r\n        {categoryType.map(({ title, price, image, id }) => (\r\n          <>\r\n            {loading ? (\r\n              <ProductSkeleton />\r\n            ) : (\r\n              <div\r\n                key={title}\r\n                className=\"flex flex-col items-center overflow-hidden h-full\"\r\n              >\r\n                <>\r\n                  <Link to={`/BIGCOMMERCE/ProductDetail/${id}`}>\r\n                    <img\r\n                      src={image || placeholder}\r\n                      className=\"h-[20rem] w-[20rem] object-cover overflow-hidden duration-500 hover:scale-x-110\"\r\n                      alt=\"\"\r\n                    />\r\n                    <div className=\"mt-3 text-left\">\r\n                      <div className=\"text-base\">\r\n                        {String(title).slice(0, 20)}\r\n                      </div>\r\n                      <div className=\"text-md font-semibold\">${price}</div>\r\n                    </div>\r\n                  </Link>\r\n\r\n                  <ToastContainer />\r\n                </>\r\n              </div>\r\n            )}\r\n          </>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductCategories;\r\n","import React from \"react\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport \"../CSS/ProductSkeleton.css\";\r\nfunction ProductSkeleton() {\r\n  return (\r\n    <>\r\n      <div className=\"productSkeleton\">\r\n        <div className=\"sub_product_skeleton\">\r\n          <Skeleton circle className=\"product_skeleton_img\" />\r\n          <div className=\"product_skeleton_desc\">\r\n            <Skeleton className=\"product_skeleton_title\" />\r\n            <Skeleton className=\"product_skeleton_price\" />\r\n            <Skeleton className=\"product_skeleton_button\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProductSkeleton;\r\n","'use client';\nimport React from 'react';\n\n/**\n * @internal\n */\nconst SkeletonThemeContext = React.createContext({});\n\n/* eslint-disable react/no-array-index-key */\nconst defaultEnableAnimation = true;\n// For performance & cleanliness, don't add any inline styles unless we have to\nfunction styleOptionsToCssProperties({ baseColor, highlightColor, width, height, borderRadius, circle, direction, duration, enableAnimation = defaultEnableAnimation, }) {\n    const style = {};\n    if (direction === 'rtl')\n        style['--animation-direction'] = 'reverse';\n    if (typeof duration === 'number')\n        style['--animation-duration'] = `${duration}s`;\n    if (!enableAnimation)\n        style['--pseudo-element-display'] = 'none';\n    if (typeof width === 'string' || typeof width === 'number')\n        style.width = width;\n    if (typeof height === 'string' || typeof height === 'number')\n        style.height = height;\n    if (typeof borderRadius === 'string' || typeof borderRadius === 'number')\n        style.borderRadius = borderRadius;\n    if (circle)\n        style.borderRadius = '50%';\n    if (typeof baseColor !== 'undefined')\n        style['--base-color'] = baseColor;\n    if (typeof highlightColor !== 'undefined')\n        style['--highlight-color'] = highlightColor;\n    return style;\n}\nfunction Skeleton({ count = 1, wrapper: Wrapper, className: customClassName, containerClassName, containerTestId, circle = false, style: styleProp, ...originalPropsStyleOptions }) {\n    var _a, _b, _c;\n    const contextStyleOptions = React.useContext(SkeletonThemeContext);\n    const propsStyleOptions = { ...originalPropsStyleOptions };\n    // DO NOT overwrite style options from the context if `propsStyleOptions`\n    // has properties explicity set to undefined\n    for (const [key, value] of Object.entries(originalPropsStyleOptions)) {\n        if (typeof value === 'undefined') {\n            delete propsStyleOptions[key];\n        }\n    }\n    // Props take priority over context\n    const styleOptions = {\n        ...contextStyleOptions,\n        ...propsStyleOptions,\n        circle,\n    };\n    // `styleProp` has the least priority out of everything\n    const style = {\n        ...styleProp,\n        ...styleOptionsToCssProperties(styleOptions),\n    };\n    let className = 'react-loading-skeleton';\n    if (customClassName)\n        className += ` ${customClassName}`;\n    const inline = (_a = styleOptions.inline) !== null && _a !== void 0 ? _a : false;\n    const elements = [];\n    const countCeil = Math.ceil(count);\n    for (let i = 0; i < countCeil; i++) {\n        let thisStyle = style;\n        if (countCeil > count && i === countCeil - 1) {\n            // count is not an integer and we've reached the last iteration of\n            // the loop, so add a \"fractional\" skeleton.\n            //\n            // For example, if count is 3.5, we've already added 3 full\n            // skeletons, so now we add one more skeleton that is 0.5 times the\n            // original width.\n            const width = (_b = thisStyle.width) !== null && _b !== void 0 ? _b : '100%'; // 100% is the default since that's what's in the CSS\n            const fractionalPart = count % 1;\n            const fractionalWidth = typeof width === 'number'\n                ? width * fractionalPart\n                : `calc(${width} * ${fractionalPart})`;\n            thisStyle = { ...thisStyle, width: fractionalWidth };\n        }\n        const skeletonSpan = (React.createElement(\"span\", { className: className, style: thisStyle, key: i }, \"\\u200C\"));\n        if (inline) {\n            elements.push(skeletonSpan);\n        }\n        else {\n            // Without the <br />, the skeleton lines will all run together if\n            // `width` is specified\n            elements.push(React.createElement(React.Fragment, { key: i },\n                skeletonSpan,\n                React.createElement(\"br\", null)));\n        }\n    }\n    return (React.createElement(\"span\", { className: containerClassName, \"data-testid\": containerTestId, \"aria-live\": \"polite\", \"aria-busy\": (_c = styleOptions.enableAnimation) !== null && _c !== void 0 ? _c : defaultEnableAnimation }, Wrapper\n        ? elements.map((el, i) => React.createElement(Wrapper, { key: i }, el))\n        : elements));\n}\n\nfunction SkeletonTheme({ children, ...styleOptions }) {\n    return (React.createElement(SkeletonThemeContext.Provider, { value: styleOptions }, children));\n}\n\nexport { SkeletonTheme, Skeleton as default };\n"],"names":["productData","loading","setLoading","useContext","MyContext","categoryType","setCategoryType","useState","handleProductCategory","category","filter","items","setTimeout","useEffect","_jsxs","className","children","_jsx","NavLink","to","onClick","map","_ref","title","price","image","id","_Fragment","ProductSkeleton","Link","concat","src","placeholder","alt","String","slice","ToastContainer","Skeleton","circle","SkeletonThemeContext","React","defaultEnableAnimation","styleOptionsToCssProperties","baseColor","highlightColor","width","height","borderRadius","direction","duration","enableAnimation","style","_ref2","count","wrapper","Wrapper","customClassName","containerClassName","containerTestId","styleProp","originalPropsStyleOptions","_a","_b","_c","contextStyleOptions","propsStyleOptions","key","value","Object","entries","styleOptions","inline","elements","countCeil","Math","ceil","i","thisStyle","fractionalPart","fractionalWidth","skeletonSpan","push","el"],"sourceRoot":""}