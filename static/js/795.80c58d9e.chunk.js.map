{"version":3,"file":"static/js/795.80c58d9e.chunk.js","mappings":"qMAsHA,QAjHA,WACE,MAAM,iBAAEA,EAAgB,oBAAEC,EAAmB,iBAAEC,IAAqBC,EAAAA,EAAAA,YAAWC,EAAAA,IAExEC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,IACtCC,EAAWC,IAAgBF,EAAAA,EAAAA,UAAS,GAyC3C,OAvCAG,QAAQC,IAAIH,IAgCZI,EAAAA,EAAAA,YAAU,QAKP,IACLF,QAAQC,IAAI,aAAaX,IAErBa,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,+BAA8BD,SAC1Cf,EAAiBiB,OAAS,GACzBJ,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWD,UACxBF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,uCAAsCD,SAAC,0BAKvDG,EAAAA,EAAAA,MAAAJ,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,sBAAqBD,SACjCf,EAAiBmB,KAAIC,IAAA,IAAC,MAAEC,EAAK,MAAEC,EAAK,MAAEC,EAAK,GAAEC,EAAE,SAAEC,GAAUL,EAAA,OAC1DF,EAAAA,EAAAA,MAAA,OAEEF,UAAU,0CAAyCD,SAAA,EAEnDG,EAAAA,EAAAA,MAAA,OAAKF,UAAU,0BAAyBD,SAAA,EACtCF,EAAAA,EAAAA,KAAA,OACEa,IAAKL,GAASM,EACdC,IAAI,GACJZ,UAAU,cAEZE,EAAAA,EAAAA,MAAA,OAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAGG,UAAU,GAAED,SAAEO,EAAMO,MAAM,EAAG,OAChCX,EAAAA,EAAAA,MAAA,MAAAH,SAAA,CAAI,IAAEQ,YAGVV,EAAAA,EAAAA,KAAA,SACEiB,KAAK,SACLC,KAAK,WACLC,MAAOxB,EAAUgB,IAAO,EACxBS,SAAWC,GA5DLC,EAACC,EAAGC,EAAWb,KACrC,IAAIc,EAAWF,EAAEG,OAAOP,MAExB,GAAIM,GAAY,EACd,OAAO7B,EAAa,GAGtBA,GAAc+B,IAAO,IAChBA,EACH,CAAChB,GAAKiB,OAAOH,OAGfhC,GAAeoC,GAAcA,EAAYJ,EAAWD,GAAU,EAgDzBF,CAAgBD,EAAOX,EAAOC,GACnDR,UAAU,0DAEZH,EAAAA,EAAAA,KAAC8B,EAAAA,IAAgB,CACfC,QAASA,IAvEHC,KACtB,IAAIC,EAAc9C,EAAiB+C,QAAQC,GAAUA,EAAMxB,KAAOqB,IAClEI,aAAaC,QAAQ,WAAYC,KAAKC,UAAUN,IAChD7C,EAAoB6C,GACpB5C,EAAiB4C,EAAY7B,OAAO,EAmELoC,CAAe7B,GAC9BR,UAAU,yDAvBPQ,EAyBD,OAGVN,EAAAA,EAAAA,MAAA,OAAKF,UAAU,+CAA8CD,SAAA,EAC3DF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,yBAAwBD,SAAC,kBACvCG,EAAAA,EAAAA,MAAA,OAAKF,UAAU,0CAAyCD,SAAA,EACtDF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,kBACJF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,YAERG,EAAAA,EAAAA,MAAA,OAAKF,UAAU,wDAAuDD,SAAA,EACpEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,mBACJG,EAAAA,EAAAA,MAAA,QAAMF,UAAU,WAAUD,SAAA,CAAC,IACvB0B,OAAOpC,GAAYiD,QAAQ,UAGjCzC,EAAAA,EAAAA,KAAA,UACE+B,QAlEeW,MAC3BC,EAAAA,EAAAA,IAAM,kCAAkC,EAkE5BxC,UAAU,0FAAyFD,SACpG,0BASf,C","sources":["Components/JavaScript/AddToCart.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { MyContext } from \"./ContextHook\";\r\nimport { FaRegWindowClose } from \"react-icons/fa\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport placeholder from \"../Images/placeholder.jpg\";\r\nfunction AddToCart() {\r\n  const { localStorageData, setLocalStorageData, setTotalCartItem } = useContext(MyContext);\r\n\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n  const [Pquantity, setPQuantity] = useState(1);\r\n\r\n  console.log(Pquantity);\r\n\r\n  // Get Data from localStorage.\r\n\r\n  const removeFromCart = (productID) => {\r\n    let dataToStore = localStorageData.filter((items) => items.id !== productID);\r\n    localStorage.setItem(\"cartData\", JSON.stringify(dataToStore));\r\n    setLocalStorageData(dataToStore);\r\n    setTotalCartItem(dataToStore.length);\r\n  };\r\n\r\n  const handleQtyChange = (e, currPrice, id) => {\r\n    let inputVal = e.target.value;\r\n\r\n    if (inputVal <= 0) {\r\n      return setPQuantity(1);\r\n    }\r\n\r\n    setPQuantity((prevQty) => ({\r\n      ...prevQty,\r\n      [id]: Number(inputVal),\r\n    }));\r\n\r\n    setTotalPrice((prevPrice) => prevPrice + inputVal * currPrice);\r\n  };\r\n\r\n  const notify = () => toast(\"This feature comming soon!\");\r\n\r\n  const paymentCheckoutClick = () => {\r\n    toast(\"This feature is in my todoList.\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    // localStorageData.reduce((prevValue, currentVal) => {\r\n    //   console.log(\"reduce:\",prevValue,currentVal)\r\n    //   return setTotalPrice(Number(prevValue.price) + Number(currentVal.price));\r\n    // }, 0);\r\n  }, []);\r\nconsole.log(\"addtoCart:\",localStorageData)\r\n  return (\r\n    <>\r\n      <div className=\"container mx-auto p-16 py-24\">\r\n        {localStorageData.length < 1 ? (\r\n          <div className=\"py-[4rem]\">\r\n            <h1 className=\"text-3xl border-b-2 text-center pb-8\">\r\n              No item added yet.\r\n            </h1>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className=\"flex flex-col gap-6\">\r\n              {localStorageData.map(({ image, title, price, id, quantity }) => (\r\n                <div\r\n                  key={id}\r\n                  className=\"flex items-center justify-between gap-4\"\r\n                >\r\n                  <div className=\"flex items-center gap-5\">\r\n                    <img\r\n                      src={image || placeholder}\r\n                      alt=\"\"\r\n                      className=\"w-[5rem]\"\r\n                    />\r\n                    <div>\r\n                      <p className=\"\">{title.slice(0, 20)}</p>\r\n                      <h4>${price}</h4>\r\n                    </div>\r\n                  </div>\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"quantity\"\r\n                    value={Pquantity[id] || 1}\r\n                    onChange={(event) => handleQtyChange(event, price, id)}\r\n                    className=\"border-2 p-1 font-semibold text-[1.2rem] text-center\"\r\n                  />\r\n                  <FaRegWindowClose\r\n                    onClick={() => removeFromCart(id)}\r\n                    className=\"text-2xl cursor-pointer transition hover:scale-110\"\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"w-1/2 flex flex-col items-normal gap-5 mt-14\">\r\n              <h1 className=\"text-2xl font-semibold\">Items Total.</h1>\r\n              <div className=\"flex items-center justify-between gap-2\">\r\n                <h3>Shipping Fee</h3>\r\n                <span>$15</span>\r\n              </div>\r\n              <div className=\"flex items-center justify-between gap-2 font-semibold\">\r\n                <h3>Overall Total</h3>\r\n                <span className=\"text-2xl\">\r\n                  ${Number(totalPrice).toFixed(2)}\r\n                </span>\r\n              </div>\r\n              <button\r\n                onClick={paymentCheckoutClick}\r\n                className=\"mt-4 bg-blue-500 px-8 py-3 text-2xl text-white transition hover:scale-95 focus:border-0\"\r\n              >\r\n                Checkout Now\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddToCart;\r\n"],"names":["localStorageData","setLocalStorageData","setTotalCartItem","useContext","MyContext","totalPrice","setTotalPrice","useState","Pquantity","setPQuantity","console","log","useEffect","_jsx","_Fragment","children","className","length","_jsxs","map","_ref","image","title","price","id","quantity","src","placeholder","alt","slice","type","name","value","onChange","event","handleQtyChange","e","currPrice","inputVal","target","prevQty","Number","prevPrice","FaRegWindowClose","onClick","productID","dataToStore","filter","items","localStorage","setItem","JSON","stringify","removeFromCart","toFixed","paymentCheckoutClick","toast"],"sourceRoot":""}