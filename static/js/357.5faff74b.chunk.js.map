{"version":3,"file":"static/js/357.5faff74b.chunk.js","mappings":"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","sources":["Components/JavaScript/All_Products.js","Components/JavaScript/ProductSkeleton.js","../node_modules/react-loading-skeleton/dist/index.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { MyContext } from \"./MyContextProvider\";\r\nimport \"../CSS/Product.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ProductSkeleton from \"./ProductSkeleton\";\r\nimport \"../CSS/ProductSkeleton.css\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nfunction All_Products() {\r\n  const [displayedData, setDisplayedData] = useState([]);\r\n  const [loading, setloading] = useState(true);\r\n  const {\r\n    setproductData,\r\n    productData,\r\n    setproductTag,\r\n    categoryData,\r\n    setcategoryData,\r\n    cartId,\r\n    setcartId,\r\n  } = useContext(MyContext);\r\n  const handleCategoryChange = async (categoryTag) => {\r\n    try {\r\n      let newData;\r\n      if (categoryTag === \"products\") {\r\n        newData = productData;\r\n      } else {\r\n        // Fetch and set category-specific data\r\n        const category_url = await fetch(\r\n          `https://fakestoreapi.com/products/category/${categoryTag}`\r\n        );\r\n        const category_data = await category_url.json();\r\n        setcategoryData(category_data);\r\n        newData = category_data;\r\n        setloading(false);\r\n      }\r\n\r\n      setproductTag(categoryTag); // Set the productTag in the context\r\n      setDisplayedData(newData);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setloading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch initial data on component mount\r\n    const fetchData = async () => {\r\n      try {\r\n        const url = await fetch(\"https://fakestoreapi.com/products?sort=desc\");\r\n        const data = await url.json();\r\n        setproductData(data);\r\n        setDisplayedData(data);\r\n        setloading(false);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setloading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [setproductData]);\r\n\r\n  const notify = () => toast(\"Product had been added to cart!\");\r\n\r\n  const renderProducts = () => {\r\n    return displayedData.map(({ title, price, image, id }) => (\r\n      <div key={title} className=\"sub_product_content\">\r\n          {loading ? (\r\n            <ProductSkeleton />\r\n          ) : (\r\n            <>\r\n            <Link to={`/productdetail/${id}`} className=\"product_detail_link\">\r\n              <img src={image} className=\"product_image\" alt=\"\" />\r\n              <div className=\"img_descripition\">\r\n                <div className=\"title\">{title}</div>\r\n                <div className=\"price\">${price}</div>\r\n              </div>\r\n              </Link>\r\n                <button className=\"buy_now\" onClick={()=> {handleCartId(id);notify()}}>Buy Now</button>\r\n                <ToastContainer />\r\n\r\n            </>\r\n          )}\r\n        </div>\r\n    ));\r\n  };\r\n\r\n  const handleCartId = (id)=>{\r\n    setcartId(id)\r\n    console.log(cartId)\r\n}\r\n  return (\r\n    <div className=\"All_product_container\">\r\n      <div className=\"product\">\r\n        <h2>Latest Products</h2>\r\n        <div className=\"product_content\">\r\n          <div className=\"products_filter\">\r\n            <button\r\n              className=\"main_product\"\r\n              onClick={() => handleCategoryChange(\"products\")}\r\n            >\r\n              All Products\r\n            </button>\r\n            <button\r\n              className=\"main_product\"\r\n              onClick={() => handleCategoryChange(\"men's clothing\")}\r\n            >\r\n              Men's Clothing\r\n            </button>\r\n            <button\r\n              className=\"main_product\"\r\n              onClick={() => handleCategoryChange(\"women's clothing\")}\r\n            >\r\n              Women's Clothing\r\n            </button>\r\n            <button\r\n              className=\"main_product\"\r\n              onClick={() => handleCategoryChange(\"jewelery\")}\r\n            >\r\n              Jewelry\r\n            </button>\r\n            <button\r\n              className=\"main_product\"\r\n              onClick={() => handleCategoryChange(\"electronics\")}\r\n            >\r\n              Electronics\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"product_content\">{renderProducts()}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default All_Products;\r\n","import React from 'react'\r\nimport Skeleton from 'react-loading-skeleton'\r\nimport '../CSS/ProductSkeleton.css'\r\nfunction ProductSkeleton() {\r\n  return (\r\n    <>\r\n      <div className=\"productSkeleton\">\r\n        <div className=\"sub_product_skeleton\">\r\n  <Skeleton circle className='product_skeleton_img'/>\r\n  <div className=\"product_skeleton_desc\">\r\n    <Skeleton className='product_skeleton_title'/>\r\n    <Skeleton className='product_skeleton_price'/>\r\n    <Skeleton className='product_skeleton_button'/>\r\n  </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductSkeleton\r\n","'use client';\nimport React from 'react';\n\n/**\n * @internal\n */\nconst SkeletonThemeContext = React.createContext({});\n\n/* eslint-disable react/no-array-index-key */\nconst defaultEnableAnimation = true;\n// For performance & cleanliness, don't add any inline styles unless we have to\nfunction styleOptionsToCssProperties({ baseColor, highlightColor, width, height, borderRadius, circle, direction, duration, enableAnimation = defaultEnableAnimation, }) {\n    const style = {};\n    if (direction === 'rtl')\n        style['--animation-direction'] = 'reverse';\n    if (typeof duration === 'number')\n        style['--animation-duration'] = `${duration}s`;\n    if (!enableAnimation)\n        style['--pseudo-element-display'] = 'none';\n    if (typeof width === 'string' || typeof width === 'number')\n        style.width = width;\n    if (typeof height === 'string' || typeof height === 'number')\n        style.height = height;\n    if (typeof borderRadius === 'string' || typeof borderRadius === 'number')\n        style.borderRadius = borderRadius;\n    if (circle)\n        style.borderRadius = '50%';\n    if (typeof baseColor !== 'undefined')\n        style['--base-color'] = baseColor;\n    if (typeof highlightColor !== 'undefined')\n        style['--highlight-color'] = highlightColor;\n    return style;\n}\nfunction Skeleton({ count = 1, wrapper: Wrapper, className: customClassName, containerClassName, containerTestId, circle = false, style: styleProp, ...originalPropsStyleOptions }) {\n    var _a, _b, _c;\n    const contextStyleOptions = React.useContext(SkeletonThemeContext);\n    const propsStyleOptions = { ...originalPropsStyleOptions };\n    // DO NOT overwrite style options from the context if `propsStyleOptions`\n    // has properties explicity set to undefined\n    for (const [key, value] of Object.entries(originalPropsStyleOptions)) {\n        if (typeof value === 'undefined') {\n            delete propsStyleOptions[key];\n        }\n    }\n    // Props take priority over context\n    const styleOptions = {\n        ...contextStyleOptions,\n        ...propsStyleOptions,\n        circle,\n    };\n    // `styleProp` has the least priority out of everything\n    const style = {\n        ...styleProp,\n        ...styleOptionsToCssProperties(styleOptions),\n    };\n    let className = 'react-loading-skeleton';\n    if (customClassName)\n        className += ` ${customClassName}`;\n    const inline = (_a = styleOptions.inline) !== null && _a !== void 0 ? _a : false;\n    const elements = [];\n    const countCeil = Math.ceil(count);\n    for (let i = 0; i < countCeil; i++) {\n        let thisStyle = style;\n        if (countCeil > count && i === countCeil - 1) {\n            // count is not an integer and we've reached the last iteration of\n            // the loop, so add a \"fractional\" skeleton.\n            //\n            // For example, if count is 3.5, we've already added 3 full\n            // skeletons, so now we add one more skeleton that is 0.5 times the\n            // original width.\n            const width = (_b = thisStyle.width) !== null && _b !== void 0 ? _b : '100%'; // 100% is the default since that's what's in the CSS\n            const fractionalPart = count % 1;\n            const fractionalWidth = typeof width === 'number'\n                ? width * fractionalPart\n                : `calc(${width} * ${fractionalPart})`;\n            thisStyle = { ...thisStyle, width: fractionalWidth };\n        }\n        const skeletonSpan = (React.createElement(\"span\", { className: className, style: thisStyle, key: i }, \"\\u200C\"));\n        if (inline) {\n            elements.push(skeletonSpan);\n        }\n        else {\n            // Without the <br />, the skeleton lines will all run together if\n            // `width` is specified\n            elements.push(React.createElement(React.Fragment, { key: i },\n                skeletonSpan,\n                React.createElement(\"br\", null)));\n        }\n    }\n    return (React.createElement(\"span\", { className: containerClassName, \"data-testid\": containerTestId, \"aria-live\": \"polite\", \"aria-busy\": (_c = styleOptions.enableAnimation) !== null && _c !== void 0 ? _c : defaultEnableAnimation }, Wrapper\n        ? elements.map((el, i) => React.createElement(Wrapper, { key: i }, el))\n        : elements));\n}\n\nfunction SkeletonTheme({ children, ...styleOptions }) {\n    return (React.createElement(SkeletonThemeContext.Provider, { value: styleOptions }, children));\n}\n\nexport { SkeletonTheme, Skeleton as default };\n"],"names":["displayedData","setDisplayedData","useState","loading","setloading","setproductData","productData","setproductTag","categoryData","setcategoryData","cartId","setcartId","useContext","MyContext","handleCategoryChange","async","newData","categoryTag","category_url","fetch","concat","category_data","json","error","console","useEffect","url","data","fetchData","handleCartId","id","log","_jsxs","className","children","_jsx","onClick","map","_ref","title","price","image","ProductSkeleton","_Fragment","Link","to","src","alt","toast","ToastContainer","Skeleton","circle","SkeletonThemeContext","React","defaultEnableAnimation","styleOptionsToCssProperties","baseColor","highlightColor","width","height","borderRadius","direction","duration","enableAnimation","style","_ref2","count","wrapper","Wrapper","customClassName","containerClassName","containerTestId","styleProp","originalPropsStyleOptions","_a","_b","_c","contextStyleOptions","propsStyleOptions","key","value","Object","entries","styleOptions","inline","elements","countCeil","Math","ceil","i","thisStyle","fractionalPart","fractionalWidth","skeletonSpan","push","el"],"sourceRoot":""}