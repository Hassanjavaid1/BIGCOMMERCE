{"version":3,"file":"static/js/468.0d5bceee.chunk.js","mappings":"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","sources":["Components/JavaScript/AddToCart.js","Components/Skeleton/DetailSkeleton.js","Components/JavaScript/ProductDetail.js","../node_modules/react-loading-skeleton/dist/index.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { MyContext } from \"./ContextHook\";\r\nimport { FaRegWindowClose } from \"react-icons/fa\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport placeholder from \"../Images/placeholder.jpg\";\r\nfunction AddToCart() {\r\n  const { localStorageData, setLocalStorageData, setTotalCartItem } = useContext(MyContext);\r\n\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n  const [Pquantity, setPQuantity] = useState(1);\r\n\r\n  console.log(Pquantity);\r\n\r\n  // Get Data from localStorage.\r\n\r\n  const removeFromCart = (productID) => {\r\n    let dataToStore = localStorageData.filter((items) => items.id !== productID);\r\n    localStorage.setItem(\"cartData\", JSON.stringify(dataToStore));\r\n    setLocalStorageData(dataToStore);\r\n    setTotalCartItem(dataToStore.length);\r\n  };\r\n\r\n  const handleQtyChange = (e, currPrice, id) => {\r\n    let inputVal = e.target.value;\r\n\r\n    if (inputVal <= 0) {\r\n      return setPQuantity(1);\r\n    }\r\n\r\n    setPQuantity((prevQty) => ({\r\n      ...prevQty,\r\n      [id]: Number(inputVal),\r\n    }));\r\n\r\n    setTotalPrice((prevPrice) => prevPrice + inputVal * currPrice);\r\n  };\r\n\r\n  const notify = () => toast(\"This feature comming soon!\");\r\n\r\n  const paymentCheckoutClick = () => {\r\n    toast(\"This feature is in my todoList.\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    // localStorageData.reduce((prevValue, currentVal) => {\r\n    //   console.log(\"reduce:\",prevValue,currentVal)\r\n    //   return setTotalPrice(Number(prevValue.price) + Number(currentVal.price));\r\n    // }, 0);\r\n  }, []);\r\nconsole.log(\"addtoCart:\",localStorageData)\r\n  return (\r\n    <>\r\n      <div className=\"container mx-auto p-16 py-24\">\r\n        {localStorageData.length < 1 ? (\r\n          <div className=\"py-[4rem]\">\r\n            <h1 className=\"text-3xl border-b-2 text-center pb-8\">\r\n              No item added yet.\r\n            </h1>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className=\"flex flex-col gap-6\">\r\n              {localStorageData.map(({ image, title, price, id, quantity }) => (\r\n                <div\r\n                  key={id}\r\n                  className=\"flex items-center justify-between gap-4\"\r\n                >\r\n                  <div className=\"flex items-center gap-5\">\r\n                    <img\r\n                      src={image || placeholder}\r\n                      alt=\"\"\r\n                      className=\"w-[5rem]\"\r\n                    />\r\n                    <div>\r\n                      <p className=\"\">{title.slice(0, 20)}</p>\r\n                      <h4>${price}</h4>\r\n                    </div>\r\n                  </div>\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"quantity\"\r\n                    value={Pquantity[id] || 1}\r\n                    onChange={(event) => handleQtyChange(event, price, id)}\r\n                    className=\"border-2 p-1 font-semibold text-[1.2rem] text-center\"\r\n                  />\r\n                  <FaRegWindowClose\r\n                    onClick={() => removeFromCart(id)}\r\n                    className=\"text-2xl cursor-pointer transition hover:scale-110\"\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"w-1/2 flex flex-col items-normal gap-5 mt-14\">\r\n              <h1 className=\"text-2xl font-semibold\">Items Total.</h1>\r\n              <div className=\"flex items-center justify-between gap-2\">\r\n                <h3>Shipping Fee</h3>\r\n                <span>$15</span>\r\n              </div>\r\n              <div className=\"flex items-center justify-between gap-2 font-semibold\">\r\n                <h3>Overall Total</h3>\r\n                <span className=\"text-2xl\">\r\n                  ${Number(totalPrice).toFixed(2)}\r\n                </span>\r\n              </div>\r\n              <button\r\n                onClick={paymentCheckoutClick}\r\n                className=\"mt-4 bg-blue-500 px-8 py-3 text-2xl text-white transition hover:scale-95 focus:border-0\"\r\n              >\r\n                Checkout Now\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddToCart;\r\n","import React from \"react\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport \"../CSS/ProductSkeleton.css\";\r\nfunction Detail_Skeleton() {\r\n  return (\r\n    <>\r\n      <div className=\"detail_skeleton\">\r\n        <div className=\"sub_detail_skeleton\">\r\n          <Skeleton className=\"detail_skeleton_img\" />\r\n        </div>\r\n        <div className=\"detail_desc_skeleton\">\r\n          <Skeleton className=\"detail_skeleton_category\" />\r\n          <Skeleton count={2} className=\"detail_title_price_skeleton\" />\r\n          <Skeleton count={5} className=\"detail_desc_skeleton\" />\r\n\r\n          <Skeleton circle className=\"detail_button_skeleton\" />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Detail_Skeleton;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { FaStar } from \"react-icons/fa\";\r\nimport { MyContext } from \"./ContextHook\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport DetailSkeleton from \"../Skeleton/DetailSkeleton\";\r\nimport placeholder from \"../Images/placeholder.jpg\";\r\nimport AddToCart from \"./AddToCart\";\r\n\r\nfunction ProductDetail() {\r\n  const {\r\n    setLocalStorageData,\r\n    localStorageData,\r\n    totalCartItem,\r\n    setTotalCartItem,\r\n  } = useContext(MyContext);\r\n\r\n  const [productDetail, setProductDetail] = useState([]);\r\n\r\n  const [detailLoading, setDetailLoading] = useState(true);\r\n\r\n  const { id } = useParams();\r\n  console.log(id);\r\n\r\n  const fetchProudctDetail = async () => {\r\n    const url = await fetch(`https://fakestoreapi.com/products/${id}`);\r\n    const data = await url.json();\r\n    console.log(data);\r\n    console.log(\"mazi he mazi:\", data);\r\n    setProductDetail(data);\r\n    setDetailLoading(false);\r\n  };\r\n  useEffect(() => {\r\n    fetchProudctDetail();\r\n\r\n    setTimeout(() => {\r\n      setDetailLoading(false);\r\n    }, 900);\r\n  }, []);\r\n\r\n  const handleCartData = () => {\r\n    let newData = JSON.parse(localStorage.getItem(\"cartData\")) || [];\r\n    console.log(newData);\r\n\r\n    //Check Duplicate Value\r\n\r\n    let isValueExist = newData.filter((items) => items.id == productDetail.id);\r\n    if (isValueExist.length > 0) {\r\n      toast(\"Product already exist in your cart.\");\r\n    } else {\r\n      newData.push(productDetail);\r\n      localStorage.setItem(\"cartData\", JSON.stringify(newData));\r\n    }\r\n    setLocalStorageData(newData);\r\n    setTotalCartItem(newData.length);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"bg-[#b7b7e3]\">\r\n        <div className=\"container mx-auto p-8 lg:py-20\">\r\n          {detailLoading ? (\r\n            <DetailSkeleton />\r\n          ) : (\r\n            <div className=\"flex items-center justify-center gap-8\">\r\n              <img\r\n                src={productDetail.image || placeholder}\r\n                className=\"w-full object-cover lg:w-2/6 lg:h-[35rem]\"\r\n                alt=\"\"\r\n              />\r\n              <div className=\"flex flex-col items-baseline gap-4 lg:w-2/5\">\r\n                <h4 className=\"font-semibold text-lg uppercase\">\r\n                  {productDetail.category}\r\n                </h4>\r\n                <h2 className=\"text-2xl font-normal\">{productDetail.title}</h2>\r\n                <div className=\"flex items-center gap-6 text-2xl\">\r\n                  <h2>${productDetail.price}</h2>\r\n                  <div className=\"flex items-center gap-1 font-semibold\">\r\n                    4.1\r\n                    <FaStar className=\"text-yellow-500\" />\r\n                  </div>\r\n                </div>\r\n                <p>{productDetail.description}</p>\r\n                <div>\r\n                  <button\r\n                    onClick={handleCartData}\r\n                    className=\"bg-blue-500 text-white font-semibold px-5 py-2 text-lg focus:border-0\"\r\n                  >\r\n                    Add to Cart\r\n                  </button>\r\n                  <ToastContainer />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProductDetail;\r\n","'use client';\nimport React from 'react';\n\n/**\n * @internal\n */\nconst SkeletonThemeContext = React.createContext({});\n\n/* eslint-disable react/no-array-index-key */\nconst defaultEnableAnimation = true;\n// For performance & cleanliness, don't add any inline styles unless we have to\nfunction styleOptionsToCssProperties({ baseColor, highlightColor, width, height, borderRadius, circle, direction, duration, enableAnimation = defaultEnableAnimation, }) {\n    const style = {};\n    if (direction === 'rtl')\n        style['--animation-direction'] = 'reverse';\n    if (typeof duration === 'number')\n        style['--animation-duration'] = `${duration}s`;\n    if (!enableAnimation)\n        style['--pseudo-element-display'] = 'none';\n    if (typeof width === 'string' || typeof width === 'number')\n        style.width = width;\n    if (typeof height === 'string' || typeof height === 'number')\n        style.height = height;\n    if (typeof borderRadius === 'string' || typeof borderRadius === 'number')\n        style.borderRadius = borderRadius;\n    if (circle)\n        style.borderRadius = '50%';\n    if (typeof baseColor !== 'undefined')\n        style['--base-color'] = baseColor;\n    if (typeof highlightColor !== 'undefined')\n        style['--highlight-color'] = highlightColor;\n    return style;\n}\nfunction Skeleton({ count = 1, wrapper: Wrapper, className: customClassName, containerClassName, containerTestId, circle = false, style: styleProp, ...originalPropsStyleOptions }) {\n    var _a, _b, _c;\n    const contextStyleOptions = React.useContext(SkeletonThemeContext);\n    const propsStyleOptions = { ...originalPropsStyleOptions };\n    // DO NOT overwrite style options from the context if `propsStyleOptions`\n    // has properties explicity set to undefined\n    for (const [key, value] of Object.entries(originalPropsStyleOptions)) {\n        if (typeof value === 'undefined') {\n            delete propsStyleOptions[key];\n        }\n    }\n    // Props take priority over context\n    const styleOptions = {\n        ...contextStyleOptions,\n        ...propsStyleOptions,\n        circle,\n    };\n    // `styleProp` has the least priority out of everything\n    const style = {\n        ...styleProp,\n        ...styleOptionsToCssProperties(styleOptions),\n    };\n    let className = 'react-loading-skeleton';\n    if (customClassName)\n        className += ` ${customClassName}`;\n    const inline = (_a = styleOptions.inline) !== null && _a !== void 0 ? _a : false;\n    const elements = [];\n    const countCeil = Math.ceil(count);\n    for (let i = 0; i < countCeil; i++) {\n        let thisStyle = style;\n        if (countCeil > count && i === countCeil - 1) {\n            // count is not an integer and we've reached the last iteration of\n            // the loop, so add a \"fractional\" skeleton.\n            //\n            // For example, if count is 3.5, we've already added 3 full\n            // skeletons, so now we add one more skeleton that is 0.5 times the\n            // original width.\n            const width = (_b = thisStyle.width) !== null && _b !== void 0 ? _b : '100%'; // 100% is the default since that's what's in the CSS\n            const fractionalPart = count % 1;\n            const fractionalWidth = typeof width === 'number'\n                ? width * fractionalPart\n                : `calc(${width} * ${fractionalPart})`;\n            thisStyle = { ...thisStyle, width: fractionalWidth };\n        }\n        const skeletonSpan = (React.createElement(\"span\", { className: className, style: thisStyle, key: i }, \"\\u200C\"));\n        if (inline) {\n            elements.push(skeletonSpan);\n        }\n        else {\n            // Without the <br />, the skeleton lines will all run together if\n            // `width` is specified\n            elements.push(React.createElement(React.Fragment, { key: i },\n                skeletonSpan,\n                React.createElement(\"br\", null)));\n        }\n    }\n    return (React.createElement(\"span\", { className: containerClassName, \"data-testid\": containerTestId, \"aria-live\": \"polite\", \"aria-busy\": (_c = styleOptions.enableAnimation) !== null && _c !== void 0 ? _c : defaultEnableAnimation }, Wrapper\n        ? elements.map((el, i) => React.createElement(Wrapper, { key: i }, el))\n        : elements));\n}\n\nfunction SkeletonTheme({ children, ...styleOptions }) {\n    return (React.createElement(SkeletonThemeContext.Provider, { value: styleOptions }, children));\n}\n\nexport { SkeletonTheme, Skeleton as default };\n"],"names":["localStorageData","setLocalStorageData","setTotalCartItem","useContext","MyContext","totalPrice","setTotalPrice","useState","Pquantity","setPQuantity","console","log","useEffect","_jsx","_Fragment","children","className","length","_jsxs","map","_ref","image","title","price","id","quantity","src","placeholder","alt","slice","type","name","value","onChange","event","handleQtyChange","e","currPrice","inputVal","target","prevQty","Number","prevPrice","FaRegWindowClose","onClick","productID","dataToStore","filter","items","localStorage","setItem","JSON","stringify","removeFromCart","toFixed","paymentCheckoutClick","toast","Skeleton","count","circle","totalCartItem","productDetail","setProductDetail","detailLoading","setDetailLoading","useParams","async","url","fetch","concat","data","json","fetchProudctDetail","setTimeout","DetailSkeleton","category","FaStar","description","handleCartData","newData","parse","getItem","push","ToastContainer","SkeletonThemeContext","React","defaultEnableAnimation","styleOptionsToCssProperties","baseColor","highlightColor","width","height","borderRadius","direction","duration","enableAnimation","style","_ref2","wrapper","Wrapper","customClassName","containerClassName","containerTestId","styleProp","originalPropsStyleOptions","_a","_b","_c","contextStyleOptions","propsStyleOptions","key","Object","entries","styleOptions","inline","elements","countCeil","Math","ceil","i","thisStyle","fractionalPart","fractionalWidth","skeletonSpan","el"],"sourceRoot":""}